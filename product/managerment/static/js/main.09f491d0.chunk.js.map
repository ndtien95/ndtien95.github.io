{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","closeForm","onChange","event","target","name","value","setState","defineProperty","onSubmit","preventDefault","state","onClear","status","id","task","nextProps","_this2","react_default","a","createElement","className","onClick","index_es","icon","faTimesCircle","htmlFor","type","d","faSave","faTimes","Component","Search","onSearch","keyword","placeholder","faSearch","Sort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","faSortAlphaDown","faSortAlphaUp","Control","components_Search","components_Sort","TaskItem","onUpdateStatus","active","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","elmTasks","tasks","map","components_TaskItem","key","App","generateData","generateID","localStorage","setItem","JSON","stringify","onToggleForm","displayForm","taskEditing","displayAddTask","components_TaskForm","editTasks","showForm","data","push","findIndex","result","forEach","splice","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","rd","_this$state","item","indexOf","DataTransferItem","sort","b","faPlusCircle","components_Control","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09f491d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle, faSave ,faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass TaskForm extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state={\r\n        id:'',\r\n        name:'',\r\n        status:false\r\n    }\r\n}\r\n\r\n// Gọi khi form mở ra \r\ncomponentWillMount(){\r\n    if(this.props.task){\r\n        this.setState({\r\n            id:this.props.task.id,\r\n            name:this.props.task.name,\r\n            status:this.props.task.status\r\n        });\r\n       \r\n    }\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n    if(nextProps && nextProps.task){\r\n        this.setState({\r\n            id:nextProps.task.id,\r\n            name:nextProps.task.name,\r\n            status:nextProps.task.status\r\n        });\r\n     }\r\n     else if(!nextProps.task){\r\n        this.setState({\r\n            id:'',\r\n            name:'',\r\n            status:false\r\n        })\r\n     }\r\n}\r\n\r\n\r\n\r\ncloseForm=()=>{\r\n    this.props.closeForm()\r\n}\r\nonChange=(event)=>{\r\n    var target=event.target;\r\n    var name= target.name;\r\n    var value=target.value;\r\n    if(name==='status'){\r\n        value=target.value==='true'?true:false;\r\n    }\r\n    this.setState({\r\n        [name]:value\r\n    });\r\n}\r\n\r\nonSubmit=(event)=>{\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    //Cancel & Close Form\r\n    this.onClear()\r\n    this.closeForm()\r\n}\r\nonClear=()=>{\r\n   this.setState({\r\n       name:'',\r\n       status:'false'\r\n   }); \r\n}\r\n\r\n    render() {\r\n       var {id}=this.state\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-warning text-light\" >\r\n                    {id !==''?'Cập nhật công việc':'Thêm công việc'}\r\n                    <span className=\"float-right cursor\" onClick={()=>{this.closeForm()}}><FontAwesomeIcon icon={faTimesCircle}/></span>\r\n                 </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <fieldset className=\"form-group\">\r\n                            <label htmlFor=\"formGroupExampleInput\">Tên</label>\r\n                            <input type=\"text\" \r\n                            className=\"form-control\"\r\n                            name=\"name\" \r\n                            value={this.state.name}\r\n                            onChange={this.onChange}\r\n                             />\r\n                        </fieldset>\r\n                        <fieldset className=\"form-group\">\r\n                            <     label htmlFor=\"exampleSelect1\">Trạng Thái</label>\r\n                            <select \r\n                            className=\"form-control\" \r\n                            d=\"eexampleSelect11\"\r\n                            name=\"status\" \r\n                            value={this.state.status}\r\n                            onChange={this.onChange}>\r\n                                <option value={true}>Kích Hoạt</option>\r\n                                <option value={false}>Ẩn</option>\r\n                            </select>\r\n                        </fieldset>\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-primary \">\r\n                                <FontAwesomeIcon icon={faSave} /> Lưu</button>&nbsp;\r\n                  <button type=\"button\" \r\n                          className=\"btn btn-danger\"\r\n                          onClick={this.onClear}          >\r\n                                <FontAwesomeIcon icon={faTimes} /> Hủy bỏ</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            keyword:''\r\n        }\r\n    }\r\n    onChange=(event)=>{\r\n        var target=event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]:value\r\n        });\r\n    }\r\n    onSearch=()=>{\r\n        this.props.onSearch(this.state.keyword)\r\n    }   \r\n    render() {\r\n        var {keyword}=this.state;\r\n        return (\r\n            <div className=\"col-6\">\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" name=\"keyword\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Nhập từ khóa\" \r\n                        value={keyword}\r\n                        onChange={this.onChange}\r\n                        />\r\n                        <span className=\"input-group-btn ml-1\">\r\n                            <button type=\"button\" \r\n                            className=\"btn btn-primary\"\r\n                            onClick={this.onSearch}\r\n                            >\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                             Tìm</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSortAlphaUp, faSortAlphaDown } from '@fortawesome/free-solid-svg-icons';\r\nclass Sort extends Component {\r\n     \r\n\r\n    onClick = (sortBy, sortValue) => {\r\n        \r\n        this.props.onSort(sortBy,sortValue)\r\n    }\r\n        \r\n    render() {\r\n        \r\n        \r\n        return (\r\n            <div className=\"col-6\">\r\n                <div className=\"dropdown show\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Sắp xếp\r\n                </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={() => { this.onClick('name', 1) }}>\r\n                            <button type=\"button\" \r\n                            className={(this.props.sortBy ==='name' && this.props.sortValue===1)?'dropdown-item dropdown-item-checked':'dropdown-item'} ><FontAwesomeIcon icon={faSortAlphaDown} /> Tên A-Z</button>\r\n                        </li>\r\n                        <li onClick={() => { this.onClick('name', -1) }}>\r\n                            <button type=\"button\" \r\n                             className={(this.props.sortBy ==='name' && this.props.sortValue===-1)?'dropdown-item dropdown-item-checked':'dropdown-item'} ><FontAwesomeIcon icon={faSortAlphaUp} /> Tên A-Z</button>\r\n                        </li>\r\n                        <li onClick={() => { this.onClick('status', 1) }}>\r\n                            <button type=\"button\" \r\n                             className={(this.props.sortBy ==='status' && this.props.sortValue===1)?'dropdown-item dropdown-item-checked':'dropdown-item'} >Trạng Thái Kích Hoạt</button>\r\n                        </li>\r\n                        <li onClick={() => { this.onClick('status', -1) }}>\r\n                            <button type=\"button\" \r\n                             className={(this.props.sortBy ==='status' && this.props.sortValue===-1)?'dropdown-item dropdown-item-checked':'dropdown-item'} >Trạng Thái Ẩn</button>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sort;","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\n\r\nclass Control extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-2\">\r\n                <Search onSearch={this.props.onSearch}/>\r\n                <Sort onSort={this.props.onSort}\r\n                      sortBy={this.props.sortBy} \r\n                      sortValue={this.props.sortValue}   \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n    \r\n    onUpdateStatus=()=>{\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n\r\n\r\n    active=()=>{\r\n        if(this.props.task.status ===true){\r\n            return <span className=\"badge badge-success cursor\"\r\n                         onClick={this.onUpdateStatus}\r\n            >Kích hoạt</span>\r\n        }\r\n        else\r\n            return <span className=\"badge badge-warning cursor\"\r\n                         onClick={this.onUpdateStatus}\r\n            >Ẩn</span>\r\n    }\r\n    onDelete=()=>{\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n    onUpdate=()=>{\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <tr>\r\n                <td className=\"text-center align-middle\">{this.props.index+1}</td>\r\n                <td className=\"align-middle\">{this.props.task.name}</td>\r\n                <td className=\"text-center align-middle\">\r\n                    {this.active()}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button className=\"btn btn-warning\"\r\n                        onClick={this.onUpdate}\r\n                       \r\n                        >Sửa</button>&nbsp;\r\n                    <button className=\"btn btn-danger\"\r\n                        onClick={this.onDelete}\r\n                         >Xóa</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            filterName:'',\r\n            filterStatus:-1 // tất cả: -1, hoạt động: 1, ẩn: 0\r\n            \r\n        };\r\n    }\r\n    \r\n    onChange=(event)=>{\r\n        var target =event.target;\r\n        var name =target.name;\r\n        var value =target.value;\r\n        this.props.onFilter(\r\n            name==='filterName'?value : this.state.filterName,\r\n            name==='filterStatus'?value : this.state.filterStatus,\r\n            )\r\n        this.setState({ \r\n            [name]:value\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        \r\n        var elmTasks=this.props.tasks.map((task,index)=>{\r\n            return <TaskItem key={task.id} index={index} task={task}\r\n                    onUpdateStatus={this.props.onUpdateStatus}\r\n                    onDelete={this.props.onDelete}\r\n                    onUpdate={this.props.onUpdate}\r\n            />\r\n        })\r\n\r\n\r\n        return (\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-12\">\r\n                    <table className=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">STT</th>\r\n                                <th className=\"text-center\">Tên</th>\r\n                                <th className=\"text-center\">Trạng Thái</th>\r\n                                <th className=\"text-center\">Hoạt Động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td />\r\n                                <td>\r\n                                    <input \r\n                                    className=\"form-control\" \r\n                                    type=\"text\" \r\n                                    name=\"filterName\" \r\n                                    value={ this.state.filterName }\r\n                                    onChange={ this.onChange }\r\n                                    />\r\n                                    \r\n                                </td>\r\n                                <td>\r\n                                    <select \r\n                                    className=\"form-control\" \r\n                                    name=\"filterStatus\"\r\n                                    value={ this.state.filterStatus }\r\n                                    onChange={ this.onChange }\r\n                                    >\r\n                                        <option value={-1}>Tất cả</option>\r\n                                        <option value={0}>Ẩn</option>\r\n                                        <option value={1}>Kích hoạt</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td />\r\n                            </tr>\r\n                                {elmTasks}\r\n                            </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [], //id, name, status, \n      displayForm: false,\n      taskEditing: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword:'',\n      sortBy:'name',\n      sortValue:1\n    }\n  }\n\n  //Gọi khi f5\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n      tasks: tasks\n      });\n    }\n  }\n\n  generateData = () => {\n    var tasks = [\n      {\n        id: this.generateID(),\n        name: \"Đi chơi\",\n        status: true\n      },\n      {\n        id: this.generateID(),\n        name: \"Đi bơi\",\n        status: false\n      },\n      {\n        id: this.generateID(),\n        name: \"Đi ngủ\",\n        status: false\n      },\n    ];\n\n\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  rd() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1)\n  }\n\n  generateID() {\n    return this.rd() + this.rd() + '-' + this.rd() + '-' + this.rd() + '-' + this.rd() + '-' + this.rd() + this.rd() + this.rd()\n  }\n\n  onToggleForm = () => {\n    if (this.state.displayForm && this.state.taskEditing !== null) {\n      this.setState({\n        displayForm: true,\n        taskEditing: null\n      });\n    } else\n      this.setState({\n        displayForm: !this.state.displayForm,\n        taskEditing: null\n      });\n\n  }\n  displayAddTask = () => {\n    if (this.state.displayForm === true) {\n      return <div className=\"col-4\">\n        <TaskForm closeForm={this.closeForm}\n          onSubmit={this.onSubmit}\n          editTasks={this.editTasks}\n          task={this.state.taskEditing}\n        />\n      </div>\n    }\n  }\n\n  closeForm = () => {\n    this.setState({\n      displayForm: false\n    });\n  }\n\n  showForm = () => {\n    this.setState({\n      displayForm: true\n    });\n  }\n\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n    if (data.id === '') {\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      //editing\n      var index = this.findIndex(data.id)\n      tasks[index] = data;\n    }\n\n    this.setState({\n      tasks: tasks,\n      taskEditing: null\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }\n\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id)\n\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        task: tasks\n      })\n      localStorage.setItem('tasks', JSON.stringify(tasks))\n    }\n\n  }\n\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    })\n    return result\n  }\n\n  //button xóa\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id)\n\n    if (index !== -1) {\n      tasks.splice(index, 1); // xóa theo id\n      this.setState({\n        task: tasks\n      })\n      localStorage.setItem('tasks', JSON.stringify(tasks))\n    }\n    this.closeForm()\n  }\n\n\n  // button sửa \n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id)\n    var taskEditing = tasks[index];\n    this.setState({\n      taskEditing: taskEditing,\n\n    });\n\n    this.showForm();\n  }\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = +filterStatus\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    });\n  }\n\n  onSearch=(keyword)=>{\n    this.setState({\n      keyword:keyword\n    });\n  }\n  \n  onSort=(sortBy,sortValue)=>{\n    this.setState({\n      sortBy:sortBy,\n      sortValue:sortValue\n      \n    });\n    \n  }\n  render() {\n    var { tasks, filter,keyword,sortBy,sortValue } = this.state // var tasks = this.state.tasks\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((item) => {\n          return item.name.toLowerCase().indexOf(filter.name) !== -1;\n        }\n        )\n      }\n      tasks = tasks.filter((item) => {\n        if (filter.status === -1) {\n          return DataTransferItem\n        } else {\n          return item.status === (filter.status === 1 ? true : false)\n        }\n      })\n    }\n    if(keyword){\n      tasks = tasks.filter((item) => {\n        return item.name.toLowerCase().indexOf(keyword) !== -1;\n      })\n    }\n    //sort\n    if(sortBy==='name'){\n      tasks.sort((a,b)=>{\n        if(a.name>b.name) return sortValue;\n        else if(a.name<b.name) return -sortValue;\n        else return 0;\n      })\n    }else{\n      tasks.sort((a,b)=>{\n        if(a.status>b.status) return -sortValue;\n        else if(a.status<b.status) return sortValue;\n        else return 0;\n      })\n    }\n    \n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản lý công việc</h1><hr />\n        </div>\n        <div className=\"row\">\n          {this.displayAddTask()}\n          <div className=\"col\">\n            <div>\n              <div className=\"btn btn-primary cursor\" onClick={this.onToggleForm}><FontAwesomeIcon icon={faPlusCircle} /> Thêm công việc</div>\n              {/* <div className=\"btn btn-danger ml-2\" onClick={this.generateData}>Generate Data</div> */}\n              <Control onSearch={this.onSearch} onSort={this.onSort}\n                       sortBy={sortBy} sortValue={sortValue}\n              />\n              <TaskList tasks={tasks}\n                onUpdateStatus={this.onUpdateStatus}\n                onDelete={this.onDelete}\n                onUpdate={this.onUpdate}\n                onFilter={this.onFilter}\n              />\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}